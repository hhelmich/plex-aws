AWSTemplateFormatVersion: 2010-09-09
Description: "Deploys Plex onto AWS using EC2, S3, and other services"
Parameters:
  PlexProjectId:
    Type: "String"
    Description: >-
      Unique project id for your Plex installation. Must be at least 12
      characters long.
    MinLength: 12
  PlexVpcId:
    Type: "AWS::EC2::VPC::Id"
    Description: "VPC where Plex will be deployed."
  PlexAzName:
    Type: "AWS::EC2::AvailabilityZone::Name"
    Description: "Name of AZ to deploy into"
  PlexSubnetId:
    Type: "AWS::EC2::Subnet::Id"
    Description: "Subnet for the EFS mount"
Resources:
  PlexS3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "${PlexProjectId}-plex-media-bucket"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          -
            ServerSideEncryptionByDefault:
              SSEAlgorithm: "aws:kms"
              KMSMasterKeyID: "aws/s3"
      AccessControl: "Private"
      VersioningConfiguration:
        Status: "Suspended"
      LifecycleConfiguration:
        Rules:
          -
            Id: !Sub "${PlexProjectId}MediaBucketRule"
            Status: "Enabled"
            NoncurrentVersionExpirationInDays: 90
            Transitions:
            -
              StorageClass: "STANDARD_IA"
              TransitionInDays: 60
  PlexMountSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: !Ref "PlexVpcId"
      GroupName: "PlexMountSecurityGroup"
      GroupDescription: "Access for the EFS mount."
      SecurityGroupIngress:
        - IpProtocol: tcp
          Description: "Limit access to the EFS mount."
          CidrIp: "172.31.0.0/16"
          ToPort: 2049
          FromPort: 2049
        - IpProtocol: udp
          Description: "Limit access to the EFS mount."
          CidrIp: "172.31.0.0/16"
          ToPort: 2049
          FromPort: 2049
      Tags:
        - Key: "Name"
          Value: "PlexMountSG"
  PlexEfs:
    Type: "AWS::EFS::FileSystem"
    Properties:
      Encrypted: True
      PerformanceMode: "generalPurpose"
  PlexEfsMount:
    Type: "AWS::EFS::MountTarget"
    Properties:
      FileSystemId: !Ref "PlexEfs"
      SubnetId: !Ref "PlexSubnetId"
      SecurityGroups:
        -
          !Ref "PlexMountSecurityGroup"
  PlexEC2RolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "PlexEC2Policy4InstanceProfile"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Sid: "PlexListBuckets"
            Effect: "Allow"
            Action:
              - "s3:ListAllMyBuckets"
              - "s3:HeadBucket"
            Resource: "*"
          -
            Sid: "PlexBucketAccess"
            Effect: "Allow"
            Action: "s3:*"
            Resource:
              - !GetAtt PlexS3Bucket.Arn
              - !Join [ "", [ !GetAtt PlexS3Bucket.Arn, "/*" ] ]
      Roles:
        -
          Ref: "PlexEC2Role"
  PlexEC2Role:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
              Effect: "Allow"
              Principal:
                Service:
                  - "ec2.amazonaws.com"
              Action:
                - "sts:AssumeRole"
      Path: "/"
  PlexInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        -
          !Ref "PlexEC2Role"
      InstanceProfileName: "PlexEC2InstanceProfile"
  PlexEC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      AvailabilityZone: !Ref "PlexAzName"
      BlockDeviceMappings:
        -
          DeviceName: "/dev/sda1"
          Ebs:
            DeleteOnTermination: True
            VolumeSize: 8
            VolumeType: "gp2"
      IamInstanceProfile: !Ref "PlexInstanceProfile"
      ImageId: "ami-9887c6e7"
      InstanceType: "t2.micro"
      KeyName: "plex-test"
      NetworkInterfaces:
        -
          AssociatePublicIpAddress: True
          DeleteOnTermination: True
          DeviceIndex: "0"
          Description: "Plex EC2 Network interface"
          SubnetId: !Ref "PlexSubnetId"
      SecurityGroups:
        - "Test Plex"
      UserData:
        Fn::Base64:
          !Sub |
            #!/usr/bin/env bash
            yum -yt install epel-release
            yum -yt upgrade
            yum -yt install nginx awscli vim-enhanced git make rpm-build
            setsebool -P httpd_can_network_connect 1
            systemctl enable nginx
            systemctl start nginx
            # git clone https://github.com/aws/efs-utils
            # sudo make rpm
            # sudo yum -y install ./build/amazon-efs-utils*rpm
      Tags:
        -
          Key: "Name"
          Value: !Sub "${PlexProjectId}-plex-ec2"
